---

################################################################################
# Set distribution dependent facts
################################################################################

- name: set facts (Debian)
  when: ansible_os_family == 'Debian'
  set_fact:
    _supervisord_service_name: supervisor
    supervisord_conf_d_dir: "{{ _supervisord_conf_d_dir_debian }}"
    _supervisord_conf_d_suffix: "conf"

- name: set facts (RedHat)
  when: ansible_os_family == 'RedHat'
  set_fact:
    _supervisord_service_name: supervisord
    supervisord_conf_d_dir: "{{ _supervisord_conf_d_dir_redhat }}"
    _supervisord_conf_d_suffix: "ini"

################################################################################
# Install
################################################################################

- name: install supervisord (Debian)
  when: ansible_os_family == 'Debian'
  apt:
    name: supervisor
    state: present
  tags:
    - supervisord_install
    - supervisord
    - install

- name: install supervisor (RedHat)
  when: ansible_os_family == 'RedHat'
  yum:
    name: supervisor
    state: present
  tags:
    - supervisord_install
    - supervisord
    - install

################################################################################
# configure and start
################################################################################

- name: enable on startup
  service:
    name: "{{ _supervisord_service_name }}"
    enabled: "{{ supervisord_enable_on_startup }}"
  tags:
    - supervisord_service
    - supervisord
    - service

- name: add programs
  template:
    src: program.ini.j2
    dest: "{{ supervisord_conf_d_dir }}/{{ item.key }}.{{ _supervisord_conf_d_suffix }}"
  with_dict: "{{ supervisord_programs }}"
  tags:
    - supervisord_configure
    - supervisord
    - configure

- name: create stdout logfile directory
  file:
    path: "{{ item.value.stdout_logfile | dirname }}"
    state: directory
    owner: "{{ item.value.user }}"
    group: "{{ item.value.user }}"
    mode: 0700
  with_dict: "{{ supervisord_programs }}"

- name: create stderr logfile directory
  file:
    path: "{{ item.value.stderr_logfile | dirname }}"
    state: directory
    owner: "{{ item.value.user }}"
    group: "{{ item.value.user }}"
    mode: 0700
  with_dict: "{{ supervisord_programs }}"


- name: reread configuration
  command: "{{ item }}"
  with_items:
    - supervisorctl reread
    - supervisorctl update
  tags:
    - supervisord_service
    - supervisord
    - service


- name: start programs
  supervisorctl:
    name: "{{ item.key }}"
    state: started
  with_dict: "{{ supervisord_programs }}"
  tags:
    - supervisord_service
    - supervisord
    - service
